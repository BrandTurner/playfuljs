mixin articleColumn(article)
  .col.six
    h2 #{article.title}
    p.Article-date #{article.date && [article.date.getFullYear(), article.date.getMonth(), article.date.getDay()].join('.') }
    != article.excerpt

- function pairUp(list) {
-   return list.reduce(function(memo, article, i) {
-     if (i % 2 === 0) memo.push([article, false]);
-     else memo[memo.length - 1][1] = article;
-     return memo;
-   }, []);
- }

doctype html
html
  head
    title= title
    meta(name='description', content= description)
    meta(name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0")
    link(rel='stylesheet' type='text/css' href='styles/global.css')
    link(rel='stylesheet' type='text/css' href='styles/grid.css')
  body
    header.Header
      .row
        h1.Header-logo PlayfulJS
      .row
        .col.two.center
          .Header-avatar
        .col.ten
          .Header-contents!= contents
          .Header-actions
            span Want a playful session at your conference?&nbsp;
            span Need help with a node.js or HTML5 project?&nbsp;
            a(href='mailto:hunter@hunterloftis.com') Email me!

    .row.Article-list
      .col.nine
        each pair in pairUp(collections.articles)
          .row
            +articleColumn(pair[0])
            +articleColumn(pair[1])

      .col.three
        form.Subscriber
          h4 Get new articles by email
          input(name='email' placeholder='enter your email address')
          a.Button Subscribe
            span.Button-sub (it's free!)
        section.Recent
          h4 Recent Articles
          each article in collections.articles.slice(0, 3)
            a(href=article.path) #{article.title}
